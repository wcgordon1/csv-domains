---
import BaseLayout from "@/layouts/BaseLayout.astro";
import Text from "@/components/fundations/elements/Text.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
import AfternicUploader from "@/components/dashboard/AfternicUploader.astro";
---

<BaseLayout title="Dashboard">
  <!-- Loading state -->
  <div id="loading" class="flex items-center justify-center min-h-screen pt-24">
    <div class="text-center">
      <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-teal-600 mx-auto"></div>
      <p class="mt-4 text-base-600">Loading...</p>
    </div>
  </div>

  <!-- Dashboard content (hidden initially) -->
  <div id="dashboard-content" class="hidden">
    <Wrapper variant="standard" class="pt-24 pb-12">
      <div class="bg-white border-b border-base-200 -mx-4 px-4 mb-8">
        <div class="flex flex-col sm:flex-row sm:justify-between sm:items-center py-6">
          <div>
            <Text tag="h1" variant="displayMD" class="font-semibold text-base-800">
              Dashboard
            </Text>
            <Text tag="p" variant="textBase" class="mt-1 text-base-600">
              Welcome back! Here's your account overview.
            </Text>
          </div>
          <div class="flex items-center gap-4 mt-4 sm:mt-0">
            <span id="user-email" class="text-sm text-base-600"></span>
          </div>
        </div>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        <!-- Stats cards -->
        <div class="bg-white p-6 rounded-lg shadow-sm border border-base-200">
          <Text tag="h3" variant="textLG" class="font-semibold text-base-800">
            Account Status
          </Text>
          <Text tag="p" variant="textSM" class="mt-2 text-base-600">
            Your account is active and ready to use.
          </Text>
          <div class="mt-4">
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
              Active
            </span>
          </div>
        </div>

        <div class="bg-white p-6 rounded-lg shadow-sm border border-base-200">
          <Text tag="h3" variant="textLG" class="font-semibold text-base-800">
            Last Login
          </Text>
          <Text tag="p" variant="textSM" class="mt-2 text-base-600" id="last-login">
            Just now
          </Text>
          <div class="mt-4">
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
              Success
            </span>
          </div>
        </div>

        <div class="bg-white p-6 rounded-lg shadow-sm border border-base-200">
          <Text tag="h3" variant="textLG" class="font-semibold text-base-800">
            Security
          </Text>
          <Text tag="p" variant="textSM" class="mt-2 text-base-600">
            Passwordless authentication enabled
          </Text>
          <div class="mt-4">
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
              Secure
            </span>
          </div>
        </div>
      </div>

      <!-- Afternic Uploader -->
      <div class="mt-8">
        <AfternicUploader />
      </div>
    </Wrapper>
  </div>

  <script>
    import { auth } from '../lib/auth';

    document.addEventListener('DOMContentLoaded', async () => {
      const loading = document.getElementById('loading');
      const dashboardContent = document.getElementById('dashboard-content');
      const userEmail = document.getElementById('user-email');
      const lastLogin = document.getElementById('last-login');

      try {
        // Check if user is authenticated
        const { user } = await auth.getUser();
        
        if (!user) {
          // Not authenticated, redirect to sign-in
          window.location.href = '/auth/sign-in';
          return;
        }

        // User is authenticated, show dashboard
        if (userEmail) {
          userEmail.textContent = user.email || 'Unknown';
        }
        
        if (lastLogin) {
          const loginTime = new Date().toLocaleString();
          lastLogin.textContent = loginTime;
        }

        // Hide loading, show content
        loading?.classList.add('hidden');
        dashboardContent?.classList.remove('hidden');

      } catch (error) {
        console.error('Dashboard error:', error);
        // Redirect to sign-in on any error
        window.location.href = '/auth/sign-in';
      }
    });
  </script>
</BaseLayout> 